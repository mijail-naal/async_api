# version: ${COMPOSE_VERSION}

services:

  nginx:
    container_name: "nginx"
    restart: always
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - fastapi
    ports:
      - ${NGINX_PORTS}
  redis:
    container_name: "redis"
    image: redis:${REDIS_VERSION}
    restart: always
    deploy:
      resources:
        limits:
          memory: 50M
    ports:
      - ${REDIS_PORTS}
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 50

  fastapi:
    container_name: "fastapi"
    build: ./fastapi
    env_file:
      - ./fastapi/env/prod/.env
    command: ["/app/src/app.sh"]
    depends_on:
      - elasticsearch
      - redis

  elasticsearch:
    container_name: "elasticsearch"
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    ports:
      - ${ELASTICSEARCH_PORTS}
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
    volumes:
      - data01:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cat/health?h=status | grep -q green"]
      retries: 300
      interval: 2s

  # kibana:
  #   container_name: "kibana"
  #   image: kibana:${KIBANA_VERSION}
  #   ports:
  #     - ${KIBANA_PORTS}
  #   depends_on: 
  #     - elasticsearch
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:5601"]
  #     retries: 300
  #     interval: 2s

  etl_loader:
    container_name: "etl_loader"
    build: ./etl_loader
    depends_on: 
      elasticsearch:
        condition: service_healthy
    env_file:
      - ./etl_loader/env/prod/.env
    environment:
      - ELASTIC_PROTOCOL=http
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200


volumes:
  data01:
  redis_data: