version: "3.9"

services:

  nginx:
    container_name: "nginx"
    restart: always
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - fastapi
    ports:
      - 80:80
  redis:
    container_name: "redis"
    image: redis:7.2.4
    restart: always
    deploy:
      resources:
        limits:
          memory: 50M
    ports:
      - ${REDIS_PORTS}
    volumes:
      - ./redis/data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 50

  fastapi:
    container_name: "fastapi"
    build: ./fastapi
    env_file:
      - ./fastapi/env/prod/.env
    command: ["/app/src/docker/app.sh"]
    expose:
      - 3000
    ports:
      - 3000
    depends_on:
      - elasticsearch
      - redis

  elasticsearch:
    container_name: "elasticsearch"
    image: elasticsearch:8.12.1
    ports:
      - ${ELASTIC_PORTS}
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      # - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
    volumes:
      - data01:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cat/health?h=status | grep -q green"]
      retries: 300
      interval: 2s

  kibana:
    container_name: "kibana"
    image: kibana:8.12.1
    ports:
      - 5601:5601
    depends_on: [ "elasticsearch" ]
    volumes:
      - "./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      retries: 300
      interval: 2s
    
  etl_loader:
    container_name: "etl_loader"
    build: ./etl_loader
    depends_on: 
      elasticsearch:
        condition: service_healthy
    env_file:
      - ./etl_loader/env/prod/.env
    environment:
      - ELASTIC_PROTOCOL=http
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200


volumes:
  data01: